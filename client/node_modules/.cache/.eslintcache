[{"/home/shadowjynxs/SIH1637/lpudrop/client/src/index.js":"1","/home/shadowjynxs/SIH1637/lpudrop/client/src/App.js":"2","/home/shadowjynxs/SIH1637/lpudrop/client/src/reportWebVitals.js":"3","/home/shadowjynxs/SIH1637/lpudrop/client/src/redux/store.js":"4","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/HomePage.js":"5","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Donation.js":"6","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/auth/Login.js":"7","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/OrganisationPage.js":"8","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Hospitals.js":"9","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/auth/Register.js":"10","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Consumer.js":"11","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Donar.js":"12","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Analytics.js":"13","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/AdminHome.js":"14","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/DonarList.js":"15","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/HospitalList.js":"16","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/OrgList.js":"17","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/Routes/ProtectedRoute.js":"18","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/Routes/PublicRoute.js":"19","/home/shadowjynxs/SIH1637/lpudrop/client/src/redux/features/auth/authSlice.js":"20","/home/shadowjynxs/SIH1637/lpudrop/client/src/services/API.js":"21","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Spinner.js":"22","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Layout/Layout.js":"23","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Layout/Header.js":"24","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/modal/Modal.js":"25","/home/shadowjynxs/SIH1637/lpudrop/client/src/redux/features/auth/authActions.js":"26","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Form/Form.js":"27","/home/shadowjynxs/SIH1637/lpudrop/client/src/services/authService.js":"28","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Layout/Sidebar.js":"29","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Form/InputType.js":"30"},{"size":542,"mtime":1732127689902,"results":"31","hashOfConfig":"32"},{"size":3267,"mtime":1732126225875,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1687603433000,"results":"34","hashOfConfig":"32"},{"size":208,"mtime":1687603433000,"results":"35","hashOfConfig":"32"},{"size":2374,"mtime":1732127618117,"results":"36","hashOfConfig":"32"},{"size":1633,"mtime":1732127611200,"results":"37","hashOfConfig":"32"},{"size":1211,"mtime":1732115223699,"results":"38","hashOfConfig":"32"},{"size":1692,"mtime":1732127607316,"results":"39","hashOfConfig":"32"},{"size":1287,"mtime":1732127598403,"results":"40","hashOfConfig":"32"},{"size":1198,"mtime":1732116083728,"results":"41","hashOfConfig":"32"},{"size":1643,"mtime":1732127589829,"results":"42","hashOfConfig":"32"},{"size":1222,"mtime":1732127594576,"results":"43","hashOfConfig":"32"},{"size":3078,"mtime":1732127584929,"results":"44","hashOfConfig":"32"},{"size":644,"mtime":1732126966616,"results":"45","hashOfConfig":"32"},{"size":1881,"mtime":1732127546074,"results":"46","hashOfConfig":"32"},{"size":1889,"mtime":1732127551715,"results":"47","hashOfConfig":"32"},{"size":1877,"mtime":1732127558668,"results":"48","hashOfConfig":"32"},{"size":772,"mtime":1732127492083,"results":"49","hashOfConfig":"32"},{"size":252,"mtime":1687603433000,"results":"50","hashOfConfig":"32"},{"size":1664,"mtime":1732127644424,"results":"51","hashOfConfig":"32"},{"size":297,"mtime":1687603433000,"results":"52","hashOfConfig":"32"},{"size":183,"mtime":1687603433000,"results":"53","hashOfConfig":"32"},{"size":416,"mtime":1687603433000,"results":"54","hashOfConfig":"32"},{"size":1831,"mtime":1732127512367,"results":"55","hashOfConfig":"32"},{"size":4655,"mtime":1732127532044,"results":"56","hashOfConfig":"32"},{"size":2097,"mtime":1732127635037,"results":"57","hashOfConfig":"32"},{"size":7590,"mtime":1732116153819,"results":"58","hashOfConfig":"32"},{"size":851,"mtime":1687603433000,"results":"59","hashOfConfig":"32"},{"size":3825,"mtime":1732127519613,"results":"60","hashOfConfig":"32"},{"size":488,"mtime":1687603433000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9ykreh",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/shadowjynxs/SIH1637/lpudrop/client/src/index.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/App.js",[],[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/reportWebVitals.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/redux/store.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/HomePage.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Donation.js",["158"],[],"import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/shared/Layout/Layout\";\nimport API from \"../services/API\";\nimport { useSelector } from \"react-redux\";\n\nconst Donation = () => {\n  const { user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  const getDonars = async () => {\n    try {\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\n        filters: {\n          inventoryType: \"in\",\n          donar: user?._id,\n        },\n      });\n      if (data?.success) {\n        setData(data?.inventory);\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"container mt-4\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Blood Group</th>\n              <th scope=\"col\">Inventory TYpe</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((record) => (\n              <tr key={record._id}>\n                <td>{record.bloodGroup}</td>\n                <td>{record.inventoryType}</td>\n                <td>{record.quantity}</td>\n                <td>{record.email}</td>\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Donation;\n","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/auth/Login.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/OrganisationPage.js",["159"],[],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"./../../components/shared/Layout/Layout\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport API from \"../../services/API\";\n\nconst OrganisationPage = () => {\n  const { user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  const getOrg = async () => {\n    try {\n      if (user?.role === \"donar\") {\n        const { data } = await API.get(\"/inventory/get-orgnaisation\");\n        if (data?.success) {\n          setData(data?.organisations);\n        }\n      }\n      if (user?.role === \"hospital\") {\n        const { data } = await API.get(\n          \"/inventory/get-orgnaisation-for-hospital\"\n        );\n        if (data?.success) {\n          setData(data?.organisations);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getOrg();\n  }, [user]);\n\n  return (\n    <Layout>\n      <table className=\"table \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Address</th>\n            <th scope=\"col\">Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((record) => (\n            <tr key={record._id}>\n              <td>{record.organisationName}</td>\n              <td>{record.email}</td>\n              <td>{record.phone}</td>\n              <td>{record.address}</td>\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default OrganisationPage;\n","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Hospitals.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/auth/Register.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Consumer.js",["160"],[],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport moment from \"moment\";\nimport API from \"../../services/API\";\nimport { useSelector } from \"react-redux\";\n\nconst Consumer = () => {\n  const { user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  const getDonars = async () => {\n    try {\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\n        filters: {\n          inventoryType: \"out\",\n          hospital: user?._id,\n        },\n      });\n      if (data?.success) {\n        setData(data?.inventory);\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"container mt-4\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Blood Group</th>\n              <th scope=\"col\">Inventory TYpe</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((record) => (\n              <tr key={record._id}>\n                <td>{record.bloodGroup}</td>\n                <td>{record.inventoryType}</td>\n                <td>{record.quantity}</td>\n                <td>{record.email}</td>\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Consumer;\n","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Donar.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Dashboard/Analytics.js",["161","162"],[],"import React, { useState, useEffect } from \"react\";\nimport Header from \"../../components/shared/Layout/Header\";\nimport API from \"./../../services/API\";\nimport moment from \"moment\";\n\nconst Analytics = (props) => {\n  const [data, setData] = useState([]);\n  const [inventoryData, setInventoryData] = useState([]);\n  const colors = [\n    \"#884A39\",\n    \"#C38154\",\n    \"#FFC26F\",\n    \"#4F709C\",\n    \"#4942E4\",\n    \"#0079FF\",\n    \"#FF0060\",\n    \"#22A699\",\n  ];\n  const getBloodGroupData = async () => {\n    try {\n      const { data } = props.isAdminPage ? await API.get(\"/analytics/bloodGroups-data\") : await API.get(\"/analytics/adminBloodGroups-data\");\n      if (data?.success) {\n        setData(data?.bloodGroupData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getBloodGroupData();\n  }, []);\n\n  const getBloodRecords = async (isAdmin) => {\n    try {\n      const { data } = await API.get(`/inventory/get-recent-inventory?isAdmin=${isAdmin}`);\n      if (data?.success) {\n        setInventoryData(data?.inventory);\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n\n  useEffect(() => {\n    getBloodRecords(!props.isAdmin);\n  }, []);\n  return (\n    <>\n     {props.isAdminPage && <Header />}\n      <div className=\"d-flex flex-row flex-wrap\">\n        {data?.map((record, i) => (\n          <div\n            className=\"card m-2 p-1\"\n            key={i}\n            style={{ width: \"18rem\", backgroundColor: `${colors[i]}` }}\n          >\n            <div className=\"card-body\">\n              <h1 className=\"card-title bg-light text-dark text-center mb-3\">\n                {record.bloodGroup}\n              </h1>\n              <p className=\"card-text\">\n                Total In : <b>{record.totalIn}</b> (ML)\n              </p>\n              <p className=\"card-text\">\n                Total Out : <b>{record.totalOut}</b> (ML)\n              </p>\n            </div>\n            <div className=\"card-footer text-light bg-dark text-center\">\n              Total Available : <b>{record.availabeBlood}</b> (ML)\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"container my-3\">\n        <h1 className=\"my-3\">Recent Blood Transactions</h1>\n        <table className=\"table \">\n          <thead>\n            <tr>\n              <th scope=\"col\">Blood Group</th>\n              <th scope=\"col\">Inventory Type</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Donar Email</th>\n              <th scope=\"col\">TIme & Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {inventoryData?.map((record) => (\n              <tr key={record._id}>\n                <td>{record.bloodGroup}</td>\n                <td>{record.inventoryType}</td>\n                <td>{record.quantity} (ML)</td>\n                <td>{record.email}</td>\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Analytics;\n","/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/AdminHome.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/DonarList.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/HospitalList.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/pages/Admin/OrgList.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/Routes/ProtectedRoute.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/Routes/PublicRoute.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/redux/features/auth/authSlice.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/services/API.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Spinner.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Layout/Layout.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Layout/Header.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/modal/Modal.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/redux/features/auth/authActions.js",["163"],[],"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../../../services/API\";\nimport { toast } from \"react-toastify\";\n\nexport const userLogin = createAsyncThunk(\n  \"auth/login\",\n  async ({ role, email, password }, { rejectWithValue }) => {\n    try {\n      const { data } = await API.post(\"/auth/login\", { role, email, password });\n      if (data.success) {\n        alert(data.message);\n        localStorage.setItem(\"token\", data.token);\n        window.location.replace(\"/\");\n      }\n      return data;\n    } catch (error) {\n      if (error.response && error.response.data.message) {\n        return rejectWithValue(error.response.data.message);\n      } else {\n        return rejectWithValue(error.message);\n      }\n    }\n  }\n);\n\nexport const userRegister = createAsyncThunk(\n  \"auth/register\",\n  async (\n    {\n      name,\n      role,\n      email,\n      password,\n      phone,\n      organisationName,\n      address,\n      hospitalName,\n      website,\n    },\n    { rejectWithValue }\n  ) => {\n    try {\n      const { data } = await API.post(\"/auth/register\", {\n        name,\n        role,\n        email,\n        password,\n        phone,\n        organisationName,\n        address,\n        hospitalName,\n        website,\n      });\n      if (data?.success) {\n        alert(\"User Registerd Successfully\");\n        window.location.replace(\"/login\");\n      }\n    } catch (error) {\n      console.log(error);\n      if (error.response && error.response.data.message) {\n        return rejectWithValue(error.response.data.message);\n      } else {\n        return rejectWithValue(error.message);\n      }\n    }\n  }\n);\n\nexport const getCurrentUser = createAsyncThunk(\n  \"auth/getCurrentUser\",\n  async ({ rejectWithValue }) => {\n    try {\n      const res = await API.get(\"/auth/current-user\");\n      if (res.data) {\n        return res?.data;\n      }\n    } catch (error) {\n      console.log(error);\n      if (error.response && error.response.data.message) {\n        return rejectWithValue(error.response.data.message);\n      } else {\n        return rejectWithValue(error.message);\n      }\n    }\n  }\n);\n","/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Form/Form.js",[],["164"],"/home/shadowjynxs/SIH1637/lpudrop/client/src/services/authService.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Layout/Sidebar.js",[],[],"/home/shadowjynxs/SIH1637/lpudrop/client/src/components/shared/Form/InputType.js",[],[],{"ruleId":"165","severity":1,"message":"166","line":29,"column":6,"nodeType":"167","endLine":29,"endColumn":8,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":33,"column":6,"nodeType":"167","endLine":33,"endColumn":12,"suggestions":"170"},{"ruleId":"165","severity":1,"message":"166","line":29,"column":6,"nodeType":"167","endLine":29,"endColumn":8,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"172","line":32,"column":6,"nodeType":"167","endLine":32,"endColumn":8,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"174","line":49,"column":6,"nodeType":"167","endLine":49,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":97,"column":11,"nodeType":"182","messageId":"183","endLine":197,"endColumn":12,"suppressions":"184"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDonars'. Either include it or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has a missing dependency: 'getOrg'. Either include it or remove the dependency array.",["186"],["187"],"React Hook useEffect has a missing dependency: 'getBloodGroupData'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'props.isAdmin'. Either include it or remove the dependency array.",["189"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["190"],{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"191","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"kind":"200","justification":"201"},"Update the dependencies array to be: [getDonars]",{"range":"202","text":"203"},"Update the dependencies array to be: [getOrg, user]",{"range":"204","text":"205"},{"range":"206","text":"203"},"Update the dependencies array to be: [getBloodGroupData]",{"range":"207","text":"208"},"Update the dependencies array to be: [props.isAdmin]",{"range":"209","text":"210"},"directive","",[755,757],"[getDonars]",[917,923],"[getOrg, user]",[765,767],[832,834],"[getBloodGroupData]",[1217,1219],"[props.isAdmin]"]